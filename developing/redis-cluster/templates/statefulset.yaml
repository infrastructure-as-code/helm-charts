---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "redis-cluster.fullname" . }}
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-cluster.fullname" . }}-headless
spec:
  serviceName: {{ include "redis-cluster.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis-cluster.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: shards
  template:
    metadata:
      labels:
        {{- include "redis-cluster.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: shards
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: client
          containerPort: 6379
        - name: gossip
          containerPort: 16379
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
        - name: health
          mountPath: /health
          readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.redis.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.redis.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.redis.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.redis.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.redis.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.redis.livenessProbe.failureThreshold }}
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness.sh {{ .Values.redis.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.redis.readinessProbe.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.redis.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.redis.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.redis.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.redis.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.redis.readinessProbe.failureThreshold }}
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness.sh {{ .Values.redis.readinessProbe.timeoutSeconds }}
        {{- end }}
      volumes:
      - name: conf
        configMap:
          name: {{ include "redis-cluster.fullname" . }}
          defaultMode: 0755
      - name: health
        configMap:
          name: {{ include "redis-cluster.fullname" . }}-health
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
